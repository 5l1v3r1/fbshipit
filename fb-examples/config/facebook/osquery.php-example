<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * This file was moved from fbsource to www. View old history in diffusion:
 * https://fburl.com/gqsgtur7
 */
namespace Facebook\ShipIt\Config;

use type Facebook\ShipIt\{
  FBShipItCLIStaticConfig,
  FBShipItConfig,
  FBSourceBranchConfig,
};

final class FacebookOsquery extends FBShipItConfig {
  const string ROOT = 'xplat/osquery/oss/';

  <<__Override>>
  public static function getDefaultPathMappings(): ImmMap<string, string> {
    return ImmMap {
      self::ROOT => '',
    };
  }

  <<__Override>>
  protected static function getDefaultStrippedFiles(): ImmVector<string> {
    return ImmVector {
      '@(^|/).buckversion(/|$)@',
    };
  }

  <<__Override>>
  public static function getBranchConfigs(): ImmVector<FBSourceBranchConfig> {
    // Currently landing on experimental until the Buck based build is stable.
    // Change to master (i.e. delete this function) on next release.
    return ImmVector {
      shape(
        'external' => 'experimental',
        'internal' => 'master',
      ),
    };
  }

  <<__Override>>
  public static function getStripCommonFilesExceptions(): ImmVector<string> {
    return ImmVector {
      '@/BUCK$@',
      '@\.bzl$@i',
    };
  }

  <<__Override>>
  public static function getStaticConfig(): FBShipItCLIStaticConfig {
    return shape(
      'internalRepo' => 'fbsource',
      'githubOrg' => 'facebook',
      'githubProject' => 'osquery',
    );
  }
}
