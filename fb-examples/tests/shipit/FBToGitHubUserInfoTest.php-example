<?hh // strict
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * This file was moved from fbsource to www. View old history in diffusion:
 * https://fburl.com/xxbkhnqb
 */
namespace Facebook\ShipIt;


<<\Oncalls('open_source')>>
final class FBToGitHubUserInfoTest extends BaseTest {
  public function exampleUsers(): dict<string, (string, ?string, ?string)> {
    return dict[
      'internal user == external user' =>
        tuple('fredemmott', 'fredemmott', 'Fred Emmott <fe@fb.com>'),
      'internal user != external user' =>
        tuple('joelm', 'JoelMarcey', 'Joel Marcey <joelm@fb.com>'),
      'ex-employee' =>
        tuple('sgolemon', 'sgolemon', 'Sara Golemon <saramg@fb.com>'),
      'bot' => tuple('svcscm', null, null),
      'lint directive' => tuple('bypass-lint', null, null),
    ];
  }

  <<\DataProvider('exampleUsers')>>
  public async function testUserLookup(
    string $local_user,
    ?string $expected_remote_user,
    ?string $expected_remote_author_line,
  ): Awaitable<void> {
    $remote_user = await FBToGitHubUserInfo::getDestinationUserFromLocalUser(
      $local_user,
    );
    \expect($remote_user)->toBeSame($expected_remote_user);
    $remote_author_line =
      await FBToGitHubUserInfo::getDestinationAuthorFromLocalUser($local_user);
    \expect($remote_author_line)->toBeSame($expected_remote_author_line);
  }
}
